package startup;

import config.ClientConfigurationFactory;
import core.Point;;
import core.Rectangle;
import operations.KNNQuery;
import operations.RangeQuery;
import operationsupport.CacheInfo;
import operationsupport.SetUp;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.Scanner;

import org.apache.ignite.Ignite;
import org.apache.ignite.IgniteCache;
import org.apache.ignite.Ignition;

import build.build_GridFile;
import build.build_QuadTree;
import build.build_Rtree;

/** This file was generated by Ignite Web Console (02/11/2021, 13:17) **/
public class ClientNodeCodeStartup {
    /**
     * Start up node with specified configuration.
     * 
     * @param args Command line arguments, none required.
     * @throws Exception If failed.
     **/
	
	  
    static String path;
    static String path_out;
    static String knn_path;
    static int typeindex;
    static String pathCache;
    static String pathPoint;
    static double x1,x2,y1,y2;
 	static Rectangle spaceMbr;
 	static IgniteCache<Integer, File> fcache;
 	static IgniteCache<String, Rectangle> ccache;
 	static Ignite ignite;
 	static int qCount = 0;
 	static int i=0;
 	static int key=0;
 	private static Map <String,IgniteCache<Integer, ArrayList<Point>>> cacheMap;
 	

 
	public static void closeIgnite(Ignite ignite) {
		ignite.destroyCaches(ignite.cacheNames());
		//System.out.println(ignite.cacheNames());
		ignite.close();
		}
  public static void index (String path ,String path_out, int typeindex)throws IOException{

            if (typeindex==1) {
             build_QuadTree test = new build_QuadTree();
            test.loadQuadTree(path,path_out);
            }
              if (typeindex==2) {
             build_GridFile Grid = new build_GridFile();
             Grid.GridFile(path,path_out);
              }
               if (typeindex==3) {
            build_Rtree r_tree = new build_Rtree();
            r_tree.RTree(path,path_out);      
        
         }
    } 
	
    public static void main(String[] args) throws Exception {
    	ignite = Ignition.start(ClientConfigurationFactory.createConfiguration());    
    	
        Scanner input = new Scanner(System.in); 
        System.out.println("Enter your index number : 1= quad tree, 2= GridFile, 3= Rtree ");
        typeindex = input.nextInt();       
        System.out.println("Enter your path data file (.txt)");  
        path=input.next(); 
        //path="C:\\green.txt";
        System.out.println("Please enter a path to save the file"); 
        path_out=input.next();
        //path_out="D:\\"+typeindex;
        index(path,path_out+typeindex+".txt",typeindex);
        
      
        CacheInfo cacheInfo = new CacheInfo();
        SetUp.loadFiles(ignite, path_out+typeindex+".txt",0,cacheInfo);
        SetUp.createCachesFromFile(ignite,cacheInfo);  

        SetUp.loadFiles(ignite,path,1,cacheInfo);
        SetUp.insert(ignite, cacheInfo);
        //-73.916015625,40.64501953125,-73.828125,40.83837890625
        //System.out.println("Insert Query Rectangle Coordinates"); 
        ///System.out.println("Enter x1");  
        //x1 =input.nextDouble();
        //System.out.println("Please y1"); 
        //y1 =input.nextDouble();  
        //System.out.println("Enter x2");  
        //x2 =input.nextDouble();    
        //System.out.println("Please y2"); 
        //y2 =input.nextDouble();  

        //System.out.println("Enter 1st path to Range Query");  
        //pathCache =input.next();  
        //System.out.println("Please 2nd path to Range Query"); 
        //pathPoint =input.next();
        
        SetUp.printCahces(ignite,cacheInfo);
        
        //rangeQuery(new Rectangle(x1,y1,x2,y2),ignite, pathCache, pathPoint);
        RangeQuery.rangeQuery(new Rectangle(16.90968448,30.98333444, 38.02642785, 50.14039901),ignite, path_out+"Range_caches.txt", path_out+"Range_points.txt",cacheInfo);
        //rangeQuery(new Rectangle(-73.916015625,40.64501953125,-73.828125,40.83837890625),ignite, path_out+"caches.tx", path_out+"points.txt");
        
        //System.out.println("Insert Point for knn:"); 
        //System.out.println("Enter x1");  
        //-73.916015625,40.64501953125
        //x1 =input.nextDouble();  
        //System.out.println("Please y1"); 
        //y1 =input.nextDouble();
        //System.out.println("Insert Path to save knn results:"); 
        
        
        //knn_path = input.next();	
        //knnQuery(new Point(x1,y1),11,ignite,knn_path);
        
        


        
        KNNQuery.knnQuery(new Point(16.90968448, 50.14039901),30,ignite,path_out+"knn.txt",cacheInfo);
        
        closeIgnite(ignite);
        
        input.close();
    }

}